name: CI
on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]
jobs:
  ci:
    # run on 1) push, 2) external PRs, 3) softwaremill-ci PRs
    # do not run on internal, non-steward PRs since those will be run by push to branch
    if: |
      github.event_name == 'push' || 
      github.event.pull_request.head.repo.full_name != github.repository ||
      github.event.pull_request.user.login == 'softwaremill-ci'
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        scala-version: [ "2.12", "2.13", "3" ]
        target-platform: [ "JVM", "JS", "Native" ]
        java: [ "11", "21" ]
        exclude:
          - java: "21"
        include: # Restricted to build only specific Loom-based modules
          - scala-version: "3"
            target-platform: "JVM"
            java: "21"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        cache: 'sbt'
        java-version: ${{ matrix.java }}
    - name: Cache sbt
      uses: actions/cache@v4
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier
        key: sbt-cache-${{ runner.os }}-${{ matrix.target-platform }}-${{ hashFiles('project/build.properties') }}
    - name: Install libidn2-dev libcurl3-dev
      if: matrix.target-platform == 'Native'
      run: |
        sudo apt-get update
        sudo apt-get install libidn2-dev libcurl3-dev
        echo "STTP_NATIVE=1" >> $GITHUB_ENV
    - name: Install scala-cli
      if: matrix.target-platform == 'JVM'
      uses: VirtusLab/scala-cli-setup@main
      with:
        jvm: '' # needed because scala-cli-setup otherwise forces the installation of their default JVM (17)        
    - name: Enable Loom-specific modules
      if: matrix.java == '21'
      run: echo "ONLY_LOOM=1" >> $GITHUB_ENV
    - name: Compile
      run: sbt -v "compileScoped ${{ matrix.scala-version }} ${{ matrix.target-platform }}"
    - name: Compile documentation
      if: matrix.target-platform == 'JVM' && matrix.java == '11'
      run: sbt -v compileDocs
    - name: Verify that examples compile using Scala CLI
      if: matrix.target-platform == 'JVM' && matrix.java == '21' && matrix.scala-version == '3'
      run: sbt $SBT_JAVA_OPTS -v "project examples3" verifyExamplesCompileUsingScalaCli      
    - name: Verify that examples-ce2 compile using Scala CLI
      if: matrix.target-platform == 'JVM' && matrix.java == '11' && matrix.scala-version == '2.13'
      run: sbt $SBT_JAVA_OPTS -v "project examplesCe2" verifyExamplesCompileUsingScalaCli        
    - name: Test
      run: sbt -v "testScoped ${{ matrix.scala-version }} ${{ matrix.target-platform }}"        
    - name: Prepare release notes
      if: matrix.java == '11'
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Cleanup
      run: |
        rm -rf "$HOME/.ivy2/local" || true
        find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
        find $HOME/.ivy2/cache                       -name "*-LM-SNAPSHOT*"       -delete || true
        find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
        find $HOME/.sbt                              -name "*.lock"               -delete || true

  mima:
    uses: softwaremill/github-actions-workflows/.github/workflows/mima.yml@main
    # run on 1) push, 2) external PRs, 3) softwaremill-ci PRs
    # do not run on internal, non-steward PRs since those will be run by push to branch
    if: |
      github.event_name == 'push' || 
      github.event.pull_request.head.repo.full_name != github.repository ||
      github.event.pull_request.user.login == 'softwaremill-ci'

  publish:
    name: Publish release
    needs: [ci]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-22.04
    strategy:
      matrix: 
        java: [ "11", "21" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'sbt'
      - name: Cache sbt
        uses: actions/cache@v4
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier
          key: sbt-cache-release-${{ runner.os }}-${{ hashFiles('project/build.properties') }}
      - name: Install libidn2-dev libcurl3-dev
        run: |
          sudo apt-get update
          sudo apt-get install libidn2-dev libcurl3-dev
      - name: Enable Native-specific modules
        if: matrix.java == '11'
        run: echo "STTP_NATIVE=1" >> $GITHUB_ENV
      - name: Enable Loom-specific modules
        if: matrix.java == '21'
        run: echo "ONLY_LOOM=1" >> $GITHUB_ENV
      - name: Compile
        run: sbt compile
      - name: Publish artifacts
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      - name: Extract version from commit message
        if: matrix.java == '11'
        run: |
          version=${GITHUB_REF/refs\/tags\/v/}
          echo "VERSION=$version" >> $GITHUB_ENV
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
      - name: Publish release notes
        if: matrix.java == '11'
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: true
          name: "v${{ env.VERSION }}"
          tag: "v${{ env.VERSION }}"
          version: "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.ivy2/cache                       -name "*-LM-SNAPSHOT*"       -delete || true
          find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true

  label:
    # only for PRs by softwaremill-ci
    if: github.event.pull_request.user.login == 'softwaremill-ci'
    uses: softwaremill/github-actions-workflows/.github/workflows/label.yml@main

  auto-merge:
    # only for PRs by softwaremill-ci
    if: github.event.pull_request.user.login == 'softwaremill-ci'
    needs: [ ci, mima, label ]
    uses: softwaremill/github-actions-workflows/.github/workflows/auto-merge.yml@main
